{
	"main": {
		"prefix": "main",
		"body": [
			"#!/usr/bin/env bash",
			"",
			"set -eu",
			"set -o pipefail",
			"",
			"display_usage() {",
			"    echo \"Usage: $1\"",
			"}",
			"",
			"# If less than expected number of args, display usage.",
			"if [ \\$# -lt $2 ]; then",
			"  display_usage",
			"  exit 1",
			"fi",
			"",
			"# If help flags supplied, display usage.",
			"if [[ ( \\$# == \"--help\") ||  \\$# == \"-h\" ]]",
			"then",
			"  display_usage",
			"  exit 0",
			"fi"
		],
		"description": "main"
	},
	"if": {
		"prefix": "if",
		"body": [
			"if [[ $1 ]]; then",
			"    $2",
			"fi"
		],
		"description": "if"
	},
	"getopts-main": {
		"prefix": "getopts-main",
		"body": [
			"#!/usr/bin/env bash",
			"",
			"set -eu",
			"set -o pipefail",
			"",
			"",
			"FOO=\"foo\"",
			"# Any required args here.",
			"$1=\"\"",
			"",
			"display_usage() {",
			"    echo \\",
			"\"Usage: \\$0 [OPTION]... $1:",
			"Launches traffic light dataset extraction mapreduce in the cloud under PROJECT to process labels since START_TIME.",
			"",
			"Ex: \\$0 $2",
			"",
			"Options:",
			"-h                    Shows this helpdoc.",
			"-f FOO                Do something with FOO",
			"\"",
			"}",
			"",
			"while getopts hf:d:s:u flag; do",
			"    case \"${flag}\" in",
			"        f)",
			"            FOO=\"\\$OPTARG\"",
			"            echo \"foo\"",
			"            ;;",
			"        h)",
			"            display_usage",
			"            exit 0",
			"            ;;",
			"        ?)",
			"            display_usage",
			"            exit 0",
			"            ;;",
			"    esac",
			"done",
			"",
			"if ((OPTIND == 1))",
			"then",
			"    echo \"No optional options specified\"",
			"fi",
			"",
			"shift \\$((OPTIND - 1))",
			"",
			"if ((\\$# == 0))",
			"then",
			"    echo \"Missing required arg: $1\"",
			"    display_usage",
			"    exit 0",
			"fi",
			"",
			"# Set required arg to first argument.",
			"$1=\\$1",
			"",
			"$3"
		],
		"description": "getopts-main"
	}
}
